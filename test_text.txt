MOV,R1,9
MOV,R2,3
MOV,R7,0
ADD,R3,R1,R2
STR,R3,R7
ADR,R7,1
//R3 == 12
//all flags are zero
SUB,R4,R3,R1
STR,R4,R7
//N == Z
SUB,R5,R3,R3
ADD,R7,R7,R7
STR,R5,R7
//Z = 1
MOV,R6,14
ADR,R7,3
STR,R6,R7
//R6 = 0xE
MOV,R7,5
ADR,R5,4
STR,R7,R5
ADR,R7,6
LDR,R5,R7
NOP
//R7 = 0x5
MOV,R0,10
//R0 = 0xA
ORR,R1,R0,R5
EOR,R2,R6,R7
NOP
AND,R3,R6,R7
MUL,R4,R3,R0
ADR,R7,12
STR,R4,R7
MOV,R5,R4
MOV,R5,R4,LSR,2
ADR,R7,13
STR,R5,R7
MOV,R5,R5,LSL,4
ADR,R7,14
STR,R5,R7
MOV,R7,5
MOV,R5,R7,ROR,2
ADR,R7,15
STR,R5,R7
CMP,R5,R0
//R5 greater than R0
MOVLT,R0,90
MOVGE,R0,R0,LSL,1
ADR,R7,16
STRGE,R0,R7
NOP
MOVLT,R0,R0,LSL,1
ADR,R7,17
STRGE,R0,R7
MOVEQ,R0,R0,LSL,1
ADR,R7,18
STREQ,R0,R7
CMP,R0,R5
//R0 less than R5
ADRLT,R5,20
CMP,R0,R5
//R0 is EQ R5
NOP
STREQ,R4,R5
ORRLT,R5,R5,R5
ANDLT,R5,R6,R6
ADREQ,R7,15
LDR,R7,R7
//LDRGE,R8,R5
CMP,R0,R5
CMP,R0,R5
CMP,R0,R5
CMP,R4,R5
